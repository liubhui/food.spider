package com.food.spider.spider;import com.alibaba.fastjson.JSON;import com.food.spider.model.Shop;import org.apache.http.HttpEntity;import org.apache.http.HttpResponse;import org.apache.http.HttpStatus;import org.apache.http.client.HttpClient;import org.apache.http.client.methods.HttpPost;import org.apache.http.entity.StringEntity;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.message.BasicHeader;import org.apache.http.protocol.HTTP;import sun.jvm.hotspot.runtime.Thread;import java.io.BufferedReader;import java.io.InputStream;import java.io.InputStreamReader;import java.text.MessageFormat;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;/** * Created by user on 16-12-11. */public class SpiderHandler {    //主站地址    private static String baseUrl = "http://www.dianping.com";    //搜索页面地址    private static String searchUrl = baseUrl + "/search/category/2/10";    //频道页面地址    private static String channelUrl = "http://www.dianping.com/beijing/food";    //保存shop接口路径    private static String putUrl = "http://www.jflavour.com:8080/shop/put";    private static Map<String, String> districtChannelMap = new HashMap<>();    //spider 实例化    private static ISpider spider = SpiderFactory.getSpider();    public Map<String, String> getDistrictChannelMap() {        districtChannelMap = spider.getLinkListOfDistrict(channelUrl);        return districtChannelMap;    }    /**     * 多线程处理一个子频道     */    public void fixOneDistrict(Map.Entry<String, String> entry) {        String url = "";        String html = "";        String link = "";        String detailUrl = "";        int i = 0;        int totalCount = 50;        int count = 0;        String listUrl = baseUrl + entry.getValue();        i = 0;        while (true && i <= totalCount) {            i++;            url = listUrl + "p" + i;            html = spider.getHTMLBody(url);            if (html.equals(""))                break;            ArrayList<String> linkList = spider.getLinkList(html);            if (linkList == null || linkList.size() == 0) {                break;            }            for (int j = 0; j < linkList.size(); j++) {                count++;                link = linkList.get(j);                detailUrl = baseUrl + link;                html = spider.getHTMLBody(detailUrl);                Shop shop;                try {                    shop = (Shop) spider.getObject(html);                } catch (Throwable throwable) {                    System.out.print(count + "-false\n");                    System.out.print(JSON.toJSONString(throwable) + "\n");                    continue;                }                boolean success = putShop(putUrl, shop);                System.out.print(MessageFormat.format("{0}-{1}-{2}-{3}-{4}-{5}-{6}\n", java.lang.Thread.currentThread().getId(),                        java.lang.Thread.currentThread().getName(), java.lang.Thread.currentThread().getState().toString(),                        count, success, entry.getKey(), shop.getName()));            }        }    }    /**     * 推送到数据库     *     * @param url     * @param shop     * @return     */    public boolean putShop(String url, Object shop) {        HttpClient httpClient = new DefaultHttpClient();        HttpPost httpPost = new HttpPost(url);        HttpResponse response;        httpPost.addHeader("Content-Type", "application/json;charset=utf-8");        try {            StringEntity s = new StringEntity(shop.toString(), "utf-8");            s.setContentEncoding(new BasicHeader(HTTP.CONTENT_TYPE, "application/json"));            //s.setContentType("application/json;charset=utf-8");            httpPost.setEntity(s);            response = httpClient.execute(httpPost);            if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {                HttpEntity entity = response.getEntity();                InputStream inputStream = entity.getContent();                String responseCode = convertStreamToString(inputStream);                responseCode = responseCode.trim().replaceAll("\"", "");                int result = Integer.parseInt(responseCode);                return result > 0;            }        } catch (Exception e) {            return false;        }        return true;    }    public String convertStreamToString(InputStream is) throws Exception {        BufferedReader reader = new BufferedReader(new InputStreamReader(is));        StringBuilder sb = new StringBuilder();        String line;        while ((line = reader.readLine()) != null) {            if (sb.length() > 0)                sb.append("\n");            sb.append(line);        }        is.close();        return sb.toString();    }}